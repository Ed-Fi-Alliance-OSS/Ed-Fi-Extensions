name: Publish Data Standard 5.X Package

on:
  pull_request:
    branches: ['main']


  workflow_dispatch:

permissions:
      contents: write
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
  
env:
  DATASTANDARD_VERSION:  "DS-5.2.0-ME-3.0.0"
  ARTIFACTS_API_KEY: ${{ secrets.AZURE_ARTIFACTS_PERSONAL_ACCESS_TOKEN }}
  NPM_REGISTRY: ${{ vars.NPM_REGISTRY }}
  HEAD_REF:  ${{ GITHUB.HEAD_REF }}
  REF_NAME:  ${{ GITHUB.REF_NAME }}
  REPOSITORY_DISPATCH_BRANCH: ${{ github.event.client_payload.branch }}
  REPOSITORY_OWNER: ${{ GITHUB.REPOSITORY_OWNER }}  

jobs:
  Publish-Data-Standard-5X:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Ed-Fi-Extensions
    permissions:
      contents: write
    name:  Publish-Data-Standard-5.X
    steps:


    - name: Checkout Ed-Fi-Extensions
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      with:
          fetch-depth: 0


    - name: Current Latest Tag Version
      run: |
        current=$(git describe --tags $(git rev-list --tags --max-count=1))
        echo "Current: $current"

    - name: Get version changes
      id: versions
      working-directory: ./Ed-Fi-Extensions/
      run: |
        if [ ${{ github.event_name }} == 'pull_request' ]; then
          suggested=$(cat lerna.json | jq -r .version)
          current=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Versions: Lerna: $suggested. Current: $current"
          echo "update-required=$([[ "$suggested" != "$current" ]] && echo true)" >>$GITHUB_OUTPUT
        fi

    - name: Update versions
      if: steps.versions.outputs.update-required
      working-directory: ./Ed-Fi-Extensions/
      run: npx lerna version prerelease --exact --no-git-tag-version --preid pre --force-publish --yes

    - name: Set Version
      if: steps.versions.outputs.update-required == 'true'
      id: set-version
      working-directory: ./Ed-Fi-Extensions/
      run: |
        version=$(cat lerna.json | jq -r .version)
        echo "version=$version" >> "$GITHUB_OUTPUT"
        echo "Version: $version"

    - name: Git Status
      run: |
        git add .
        git  status

    - name: Commit new Version
      uses: planetscale/ghcommit-action@c7915d6c18d5ce4eb42b0eff3f10a29fe0766e4c #v0.1.44
      if: steps.versions.outputs.update-required == 'true'
      with:
        commit_message: "${{steps.set-version.outputs.version}}"
        repo: ${{ github.repository }}
        branch: ${{ github.head_ref || github.ref_name }}
     
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_ATTACH_TO_RELEASE }}

    - name: Create packages
      working-directory: ./Ed-Fi-Extensions/package/
      # Explicit step is not required for publishing, but it allows us to upload artifacts
      run: npm pack --workspaces

    - name: Upload MetaEd.Artifacts
      if: success()
      uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.3.0
      with:
        name: Data Standard-${{env.DATASTANDARD_VERSION}}
        path: ${{ github.workspace }}/Ed-Fi-Extensions/package/**/*.tgz


 